// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Guild {
  id                String             @id
  name              String
  users             UserGuild[]
  roles             Role[]
  userRoles         UserGuildRole[]
  joinedAt          DateTime           @default(now())
  scheduledMessages ScheduledMessage[]
}

model User {
  id                String             @id
  name              String
  money             Int                @default(1000)
  guilds            UserGuild[]
  guildRoles        UserGuildRole[]
  omikujiResults    OmikujiResult[]
  gameLogs          GameLog[]
  userGoods         UserGoods[]
  scheduledMessages ScheduledMessage[]
  lastDrawDate      DateTime           @default(now())
  createdAt         DateTime           @default(now())
}

model UserGuild {
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  guild   Guild  @relation(fields: [guildId], references: [id])
  guildId String

  @@id([userId, guildId])
}

model UserGuildRole {
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  role    Role   @relation(fields: [roleId], references: [id])
  roleId  String
  guild   Guild  @relation(fields: [guildId], references: [id])
  guildId String

  assignedAt DateTime @default(now())

  @@id([userId, roleId, guildId])
}

model Role {
  id        String          @id
  name      String
  guildId   String
  guild     Guild           @relation(fields: [guildId], references: [id])
  users     UserGuildRole[]
  color     String?
  position  Int
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model ScheduledMessage {
  id            String   @id @default(cuid())
  guildId       String
  guild         Guild    @relation(fields: [guildId], references: [id])
  createdUserId String
  createdUser   User     @relation(fields: [createdUserId], references: [id])
  channelId     String
  message       String
  scheduleTime  String
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model OmikujiResult {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  result    String
  createdAt DateTime @default(now())
}

model GameLog {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  bet          Int
  win          Boolean
  updatedMoney Int
  createdAt    DateTime @default(now())
}

model Goods {
  id          String      @id @default(cuid())
  type        String
  name        String
  price       Int
  description String
  createdAt   DateTime    @default(now())
  users       UserGoods[]
}

model UserGoods {
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  goods     Goods    @relation(fields: [goodsId], references: [id])
  goodsId   String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())

  @@id([userId, goodsId])
}
